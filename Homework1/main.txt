#include "stm32f10x.h"                  // Device header

void Delay_us(uint32_t xus)
{
	SysTick->LOAD = 72 * xus;				//设置定时器重装值
	SysTick->VAL = 0x00;					//清空当前计数值
	SysTick->CTRL = 0x00000005;				//设置时钟源为HCLK，启动定时器
	while(!(SysTick->CTRL & 0x00010000));	//等待计数到0
	SysTick->CTRL = 0x00000004;				//关闭定时器
}

/**
  * @brief  毫秒级延时
  * @param  xms 延时时长，范围：0~4294967295
  * @retval 无
  */
void Delay_ms(uint32_t xms)
{
	while(xms--)
	{
		Delay_us(1000);
	}
}
int main(){
	RCC_AHBPeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
	RCC_AHBPeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);
	GPIO_InitTypeDef GPIO_structure;
	GPIO_structure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_structure.GPIO_Pin = GPIO_Pin_8;
	GPIO_structure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_Init(GPIOA, &GPIO_structure);
	
	GPIO_structure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_structure.GPIO_Pin = GPIO_Pin_2;
	GPIO_structure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_Init(GPIOD, &GPIO_structure);
	
	while(1){
		Delay_ms(500);
		GPIO_Write(GPIOA, GPIO_Pin_8);
		GPIO_ResetBits(GPIOD, GPIO_Pin_2);
		Delay_ms(500);
		GPIO_Write(GPIOD, GPIO_Pin_2);
		GPIO_ResetBits(GPIOA, GPIO_Pin_8);
	}
	return 0;
}
